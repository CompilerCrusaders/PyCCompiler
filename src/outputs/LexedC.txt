Token(DATATYPE, int)
Token(IDENTIFIER, main)
Token(SEPARATOR, ()
Token(KEYWORD, void)
Token(SEPARATOR, ))
Token(SEPARATOR, {)
Token(DATATYPE, int)
Token(IDENTIFIER, a)
Token(OPERATOR, =)
Token(NUMBER, 5)
Token(SEPARATOR, ;)
Token(DATATYPE, int)
Token(IDENTIFIER, b)
Token(OPERATOR, =)
Token(NUMBER, 6)
Token(SEPARATOR, ;)
Token(DATATYPE, int)
Token(IDENTIFIER, c)
Token(OPERATOR, =)
Token(IDENTIFIER, a)
Token(OPERATOR, +)
Token(IDENTIFIER, b)
Token(SEPARATOR, ;)
Token(IDENTIFIER, c)
Token(OPERATOR, =)
Token(IDENTIFIER, c)
Token(OPERATOR, ++)
Token(SEPARATOR, ;)
Token(DATATYPE, char)
Token(IDENTIFIER, descriptiveSymbol)
Token(SEPARATOR, [)
Token(SEPARATOR, ])
Token(OPERATOR, =)
Token(STRING, " /* can you read me? \t \n */")
Token(SEPARATOR, ;)
Token(KEYWORD, return)
Token(NUMBER, 0)
Token(SEPARATOR, ;)
Token(SEPARATOR, })
